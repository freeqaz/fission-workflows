syntax = "proto3";

package fission.workflows.scheduler;
option go_package = "scheduler";

import "github.com/fission/fission-workflows/pkg/types/types.proto";
import "google/protobuf/timestamp.proto";

service Scheduler {

    rpc evaluate (fission.workflows.types.WorkflowInvocation) returns (Schedule) {
    }
}

message Schedule {
    string invocationId = 1;
    google.protobuf.Timestamp createdAt = 2;
    AbortAction abort = 4;
    repeated RunTaskAction runTasks = 5;
    repeated PrepareTaskAction prepareTasks = 6;

}

message AbortAction {
    string reason = 1;
}

message RunTaskAction {
    // Id of the task in the workflow
    string taskID = 1;
    //    map<string, fission.workflows.types.TypedValue> inputs = 2;
    // TODO Future: add here contstraints, preferences, fission scheduler instructions, communication, routing ect.
}

message PrepareTaskAction {
    string taskID = 1;
    google.protobuf.Timestamp expectedAt = 2;
}
